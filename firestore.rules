rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isProjectCreator(projectId) {
      return isAuthenticated() && 
        resource.data.createdBy == request.auth.token.email;
    }
    
    // Projects collection rules
    match /projects/{projectId} {
      // Anyone can read approved projects
      allow read: if resource.data.approved == true;
      
      // Only authenticated users can create projects
      allow create: if isAuthenticated();
      
      // Only project creators or admins can update/delete
      allow update, delete: if isProjectCreator(projectId) || isAdmin();
    }
    
    // Users collection rules
    match /users/{userId} {
      // Users can read their own data
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      
      // Users can create/update their own data
      allow create, update: if isAuthenticated() && request.auth.uid == userId;
      
      // Only admins can delete user data
      allow delete: if isAdmin();
    }
    
    // Investments collection rules
    match /investments/{investmentId} {
      // Users can read their own investments
      allow read: if isAuthenticated() && 
        (resource.data.investorId == request.auth.uid || isAdmin());
      
      // Only investors can create investments
      allow create: if isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'investor';
      
      // Only admins can update/delete investments
      allow update, delete: if isAdmin();
    }
  }
} 